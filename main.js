// ‚öôÔ∏è C·∫•u h√¨nh GitHub API
const GITHUB_USERNAME = "your-github-username";
const GITHUB_REPO = "product-storage"; // T√™n repo
const GITHUB_FILEPATH = "products.json"; // ƒê∆∞·ªùng d·∫´n file
const GITHUB_TOKEN = "ghp_xxx..."; // Token c√° nh√¢n

const apiUrl = `https://api.github.com/repos/${GITHUB_USERNAME}/${GITHUB_REPO}/contents/${GITHUB_FILEPATH}`;

document.getElementById("productForm").addEventListener("submit", async function (e) {
  e.preventDefault();

  const name = document.getElementById("name").value.trim();
  const description = document.getElementById("description").value.trim();
  const price = parseInt(document.getElementById("price").value, 10);
  const quantity = parseInt(document.getElementById("quantity").value, 10);
  const image = document.getElementById("image").value.trim();

  const newItem = {
    name,
    description,
    price,
    quantity,
    image,
    timestamp: new Date().toISOString()
  };

  const statusDiv = document.getElementById("status");
  statusDiv.textContent = "‚è≥ ƒêang l∆∞u s·∫£n ph·∫©m l√™n GitHub...";

  try {
    // üì• L·∫•y n·ªôi dung hi·ªán t·∫°i file products.json
    const res = await fetch(apiUrl, {
      headers: {
        Authorization: `Bearer ${GITHUB_TOKEN}`,
        Accept: "application/vnd.github+json"
      }
    });

    const fileData = await res.json();
    let currentContent = [];

    if (res.ok && fileData.content) {
      const decoded = atob(fileData.content);
      currentContent = JSON.parse(decoded);
    }

    // ‚ûï Th√™m s·∫£n ph·∫©m m·ªõi v√†o danh s√°ch
    currentContent.push(newItem);

    // üîÑ M√£ h√≥a l·∫°i d·ªØ li·ªáu th√†nh base64
    const updatedContent = btoa(JSON.stringify(currentContent, null, 2));

    // ‚úèÔ∏è Ghi file m·ªõi l√™n GitHub
    const updateRes = await fetch(apiUrl, {
      method: "PUT",
      headers: {
        Authorization: `Bearer ${GITHUB_TOKEN}`,
        Accept: "application/vnd.github+json"
      },
      body: JSON.stringify({
        message: `Th√™m s·∫£n ph·∫©m: ${name}`,
        content: updatedContent,
        sha: fileData.sha // c·∫ßn ƒë·ªÉ GitHub x√°c nh·∫≠n phi√™n b·∫£n
      })
    });

    if (updateRes.ok) {
      statusDiv.textContent = "‚úÖ S·∫£n ph·∫©m ƒë√£ l∆∞u th√†nh c√¥ng l√™n GitHub!";
      document.getElementById("productForm").reset();
    } else {
      const err = await updateRes.json();
      statusDiv.textContent = `‚ùå L·ªói ghi file: ${err.message}`;
    }

  } catch (error) {
    console.error(error);
    statusDiv.textContent = "‚ùå C√≥ l·ªói x·∫£y ra khi ghi l√™n GitHub.";
  }
});
